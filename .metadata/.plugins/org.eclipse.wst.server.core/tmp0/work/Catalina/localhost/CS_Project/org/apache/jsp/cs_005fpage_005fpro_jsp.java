/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.5
 * Generated at: 2018-07-03 23:22:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Iterator;
import java.util.Random;
import java.util.ArrayList;
import java.util.List;

public final class cs_005fpage_005fpro_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

 int[] mr_num;
	String bundan;
	
  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("java.util.Iterator");
    _jspx_imports_classes.add("java.util.Random");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<script type=\"text/javascript\" src=\"//ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"js/html2canvas.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"js/jquery.plugin.html2canvas.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<style>\r\n");
      out.write("\r\n");
      out.write("\t.button{\r\n");
      out.write("\t\tbackground:#1AAB8A;\r\n");
      out.write("\t\tcolor: #fff;\r\n");
      out.write("\t\tborder: none;\r\n");
      out.write("\t\tposition:relative;\r\n");
      out.write("\t\theight: 40px;\r\n");
      out.write("\t\tfont-size: 13pt;\r\n");
      out.write("\t\tpadding: 0 2em;\r\n");
      out.write("\t\tcursor: pointer;\r\n");
      out.write("\t\ttransition: 800ms ease all;\r\n");
      out.write("\t\toutline: none;\r\n");
      out.write("\t\tmargin-top:3%;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.button:hover{\r\n");
      out.write("  \t\tbackground:#fff;\r\n");
      out.write("  \t\tcolor:#1AAB8A;\r\n");
      out.write("  \t\tborder-bottom: 1px solid #1AAB8A;\r\n");
      out.write("  \t\tborder-top:1px solid #1AAB8A; \r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.s{\r\n");
      out.write("\t\tfont-size:15pt;\r\n");
      out.write("\t\tfont-weight: 600;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.f{\r\n");
      out.write("\t\tfont-size:15pt;\r\n");
      out.write("\t\tfont-weight: 400;\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("<body>\r\n");
      out.write("<div style=\"font-family: NANUMBARUNGOTHICLIGHT;\">\r\n");
      out.write("\t");
      out.write('\r');
      out.write('\n');
      out.write('	');

		request.setCharacterEncoding("UTF-8");
		int r;
		bundan = request.getParameter("bun_num");
		int dan = Integer.parseInt( request.getParameter("bun_num"));
		
	
		if(request.getParameter("m_num")==null){
			String m_num = "";
			
		}else{
			String m_num = request.getParameter("m_num");
			String[] ms_num = m_num.split(",");
			mr_num = new int[ms_num.length];;
			for(int i = 0; i<ms_num.length; i++){
				mr_num[i] = Integer.parseInt(ms_num[i]);
			}
		}
		
		int b_num = Integer.parseInt(bundan.substring(0, 1));
		int p_num = Integer.parseInt(request.getParameter("p_num"));
		Random rand = new Random();
		int[] resNum = new int[p_num];
		
		List<Integer> items_res = new ArrayList<Integer>();
		for (int i = 0; i < p_num; i++) {
			resNum[i] = rand.nextInt(p_num) + 1;
			for (int j = 0; j < i; j++) {
				if (resNum[i] == resNum[j]) {
					i--;
				}
			}
		}
		
		
		
	
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<center>\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<h1>\r\n");
      out.write("\t\t\t<div>\r\n");
      out.write("\t\t\t\t<label style=\"color: #1AAB8A;\">자리</label>를 <label\r\n");
      out.write("\t\t\t\t\tstyle=\"color: #1AAB8A;\">바꿔</label>보자!\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</h1>\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<form method = \"post\">\r\n");
      out.write("\t\t\t");

				for (int i = 0; i < resNum.length; i++) {
			
      out.write("\r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"test\" value=");
      out.print(resNum[i]);
      out.write(" />\r\n");
      out.write("\t\t\t");

			items_res.add(resNum[i]);
				}
			
			//전체 랜덤수
			for(int i = 0; i <items_res.size(); i++){
				System.out.println(items_res.get(i));
			}
			
			//결번 번호
			List<Integer> items_mr = new ArrayList<Integer>();
			for(int i = 0; i <mr_num.length; i++){
				System.out.println(mr_num[i]);
				items_mr.add(mr_num[i]);
			}
			
			
			
			System.out.println("제거어ㅓㅓㅓㅓ-----------------------------");
			
			/* for(int i = 0; i < items_mr.size(); i++){
				items_res.remove(items_mr.get(i));
			} */
			
			/* items_res.remove(3);
			
			for(int i = 0; i <items_res.size(); i++){
				System.out.println(items_res.get(i));
			} */
			
			for(int i = 0; i <items_res.size(); i++){
				for(int j = 0; j < items_mr.size(); j++){
					if(items_res.get(i).equals(items_mr.get(j))){
						items_res.remove(i);
					}
				}
			}
			
			for(int i = 0; i <items_res.size(); i++){
				System.out.println(items_res.get(i));
				resNum[i] = items_res.get(i);
			}
			
			
			
			
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"b_num\" value=\"");
      out.print(b_num);
      out.write("\">\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<table style = \"margin-bottom:30px\">\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td style = \"background-color: #1AAB8A; width: 300px; height: 50px; text-align: center;\"><center><label class = \"f\" style = \"color:white;\">칠판</label></center></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t</table>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\t<table border=1 width=\"800px\" height=\"600px\" \r\n");
      out.write("\t\t\t\tstyle=\"border-spacing: 30px 30px; text-align: center;\">\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\t");

						for (int i = 0; i < p_num-items_mr.size(); i++) {
					
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t");

					
						if ((i + 1) % 2 == 0) {
					
      out.write("\r\n");
      out.write("\t\t\t\t\t<td style=\"height: 30px; width: 40px; text-align: center;\"><label class = \"s\">");
      out.print(resNum[i]);
      out.write("</label></td>\r\n");
      out.write("\t\t\t\t\t");

						} else {
					
      out.write("\r\n");
      out.write("\t\t\t\t\t<td style=\"height: 30px; width: 40px; text-align: center; margin-left:50px;\"><label class = \"s\">");
      out.print(resNum[i]);
      out.write("</label></td>\r\n");
      out.write("\t\t\t\t\t");

						}
					
      out.write("\r\n");
      out.write("\t\t\t\t\t");

						if ((i + 1) % (b_num * 2) == 0) {
							
					
      out.write("\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t");
		}
		}

      out.write("\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<form><input type=\"button\" value=\"다시 바꾸기\" onClick=\"window.location.reload()\" class=\"button\"></form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
